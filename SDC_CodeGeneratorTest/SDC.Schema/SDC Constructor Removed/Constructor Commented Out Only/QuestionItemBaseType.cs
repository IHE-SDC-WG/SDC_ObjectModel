// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Represents questions. Parent items may be Section, Question, and
/// ListItem.
/// </summary>
[XmlInclude(typeof(QuestionItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("QuestionItemBaseType")]
public abstract partial class QuestionItemBaseType : RepeatingType
{
    #region Private fields
    protected internal bool _shouldSerializenewData;
    protected internal bool _shouldSerializechangedData;
    protected internal bool _shouldSerializereadOnly;
    private ExtensionBaseType _item;
    private bool _readOnly;
    private bool _changedData;
    private bool _newData;
    #endregion
    
    ///// <summary>
    ///// QuestionItemBaseType class constructor
    ///// </summary>
    //public QuestionItemBaseType()
    //{
    //    _readOnly = false;
    //}
    
    [XmlElement("ListField", typeof(ListFieldType), Order=0)]
    [XmlElement("ResponseField", typeof(ResponseFieldType), Order=0)]
    public virtual ExtensionBaseType Item
    {
        get
        {
            return _item;
        }
        set
        {
            if ((_item == value))
            {
                return;
            }
            if (((_item == null) 
                        || (_item.Equals(value) != true)))
            {
                _item = value;
                OnPropertyChanged("Item", value);
            }
        }
    }
    
    /// <summary>
    /// If @readOnly is set to true, the this field may not be
    /// edited by the user, and any default values set by template should be
    /// considered part of the stored data set responses, and transmitted by the
    /// SubmitForm transaction.
    /// </summary>
    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual bool readOnly
    {
        get
        {
            return _readOnly;
        }
        set
        {
            if ((_readOnly.Equals(value) != true))
            {
                _readOnly = value;
                OnPropertyChanged("readOnly", value);
            }
            _shouldSerializereadOnly = true;
        }
    }
    
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual bool changedData
    {
        get
        {
            return _changedData;
        }
        set
        {
            if ((_changedData.Equals(value) != true))
            {
                _changedData = value;
                OnPropertyChanged("changedData", value);
            }
            _shouldSerializechangedData = true;
        }
    }
    
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual bool newData
    {
        get
        {
            return _newData;
        }
        set
        {
            if ((_newData.Equals(value) != true))
            {
                _newData = value;
                OnPropertyChanged("newData", value);
            }
            _shouldSerializenewData = true;
        }
    }
    
    /// <summary>
    /// Test whether readOnly should be serialized
    /// </summary>
    public virtual bool ShouldSerializereadOnly()
    {
        if (_shouldSerializereadOnly)
        {
            return true;
        }
        return (_readOnly != default(bool));
    }
    
    /// <summary>
    /// Test whether changedData should be serialized
    /// </summary>
    public virtual bool ShouldSerializechangedData()
    {
        if (_shouldSerializechangedData)
        {
            return true;
        }
        return (_changedData != default(bool));
    }
    
    /// <summary>
    /// Test whether newData should be serialized
    /// </summary>
    public virtual bool ShouldSerializenewData()
    {
        if (_shouldSerializenewData)
        {
            return true;
        }
        return (_newData != default(bool));
    }
    
    /// <summary>
    /// Test whether Item should be serialized
    /// </summary>
    public virtual bool ShouldSerializeItem()
    {
        return (_item != null);
    }
}
}
#pragma warning restore
