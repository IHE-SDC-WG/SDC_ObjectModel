// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("FileUsageType")]
public partial class FileUsageType : ExtensionBaseType
{
    #region Private fields
    private List<CodingType> _included;
    private List<CodingType> _excluded;
    private List<string_Stype> _description;
    #endregion
    
    /// <summary>
    /// Reasons to use the file
    /// </summary>
    [XmlElement("Included", Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<CodingType> Included
    {
        get
        {
            return _included;
        }
        set
        {
            if ((_included == value))
            {
                return;
            }
            if (((_included == null) 
                        || (_included.Equals(value) != true)))
            {
                _included = value;
                OnPropertyChanged("Included", value);
            }
        }
    }
    
    /// <summary>
    /// Reasons to not use the file
    /// </summary>
    [XmlElement("Excluded", Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<CodingType> Excluded
    {
        get
        {
            return _excluded;
        }
        set
        {
            if ((_excluded == value))
            {
                return;
            }
            if (((_excluded == null) 
                        || (_excluded.Equals(value) != true)))
            {
                _excluded = value;
                OnPropertyChanged("Excluded", value);
            }
        }
    }
    
    /// <summary>
    /// Non-coded text describing usage criteria.
    /// </summary>
    [XmlElement("Description", Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<string_Stype> Description
    {
        get
        {
            return _description;
        }
        set
        {
            if ((_description == value))
            {
                return;
            }
            if (((_description == null) 
                        || (_description.Equals(value) != true)))
            {
                _description = value;
                OnPropertyChanged("Description", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Included should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIncluded()
    {
        return Included != null && Included.Count > 0;
    }
    
    /// <summary>
    /// Test whether Excluded should be serialized
    /// </summary>
    public virtual bool ShouldSerializeExcluded()
    {
        return Excluded != null && Excluded.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return Description != null && Description.Count > 0;
    }
}
}
#pragma warning restore
