// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// A structure for recording email addresses.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("EmailType")]
public partial class EmailType : ExtensionBaseType
{
    #region Private fields
    private EmailAddressType _emailAddress;
    private string_Stype _emailClass;
    private string_Stype _usage;
    #endregion
    
    [XmlElement(Order=0)]
    [RequiredAttribute()]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual EmailAddressType EmailAddress
    {
        get
        {
            return _emailAddress;
        }
        set
        {
            if ((_emailAddress == value))
            {
                return;
            }
            if (((_emailAddress == null) 
                        || (_emailAddress.Equals(value) != true)))
            {
                ValidationContext validatorPropContext = new ValidationContext(this, null, null);
                validatorPropContext.MemberName = "EmailAddress";
                Validator.ValidateProperty(value, validatorPropContext);
                _emailAddress = value;
                OnPropertyChanged("EmailAddress", value);
            }
        }
    }
    
    /// <summary>
    /// Type of email, e.g., home, office, etc
    /// </summary>
    [XmlElement(Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype EmailClass
    {
        get
        {
            return _emailClass;
        }
        set
        {
            if ((_emailClass == value))
            {
                return;
            }
            if (((_emailClass == null) 
                        || (_emailClass.Equals(value) != true)))
            {
                _emailClass = value;
                OnPropertyChanged("EmailClass", value);
            }
        }
    }
    
    /// <summary>
    /// When this email should be used
    /// </summary>
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Usage
    {
        get
        {
            return _usage;
        }
        set
        {
            if ((_usage == value))
            {
                return;
            }
            if (((_usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                _usage = value;
                OnPropertyChanged("Usage", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether EmailAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmailAddress()
    {
        return (_emailAddress != null);
    }
    
    /// <summary>
    /// Test whether EmailClass should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmailClass()
    {
        return (_emailClass != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (_usage != null);
    }
}
}
#pragma warning restore
