// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// LookupEndPointType represents list items that are derived from a web
/// service call of some type, instead of an explicit set of ListItem nodes specified in
/// the FormDesign XML. The endpoint must return a list separated into individual list
/// items by the @colTextDelimiter value specified in the parent
/// ListFieldType.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("LookupEndPointType")]
public partial class LookupEndPointType : CallFuncType
{
    #region Private fields
    private bool _shouldSerializeincludesHeaderRow;
    private List<CodingType> _responseValue;
    private bool _includesHeaderRow;
    #endregion
    
    /// <summary>
    /// LookupEndPointType class constructor
    /// </summary>
    public LookupEndPointType()
    {
        _includesHeaderRow = false;
    }
    
    /// <summary>
    /// The user's response to the lookup list. The response
    /// is recorded as a coding, terminology, classification, keyword, or
    /// local value. Multiple selections from the lookup list may be
    /// allowed.
    /// </summary>
    [XmlElement("ResponseValue", Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<CodingType> ResponseValue
    {
        get
        {
            return _responseValue;
        }
        set
        {
            if ((_responseValue == value))
            {
                return;
            }
            if (((_responseValue == null) 
                        || (_responseValue.Equals(value) != true)))
            {
                _responseValue = value;
                OnPropertyChanged("ResponseValue", value);
            }
        }
    }
    
    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual bool includesHeaderRow
    {
        get
        {
            return _includesHeaderRow;
        }
        set
        {
            if ((_includesHeaderRow.Equals(value) != true))
            {
                _includesHeaderRow = value;
                OnPropertyChanged("includesHeaderRow", value);
            }
            _shouldSerializeincludesHeaderRow = true;
        }
    }
    
    /// <summary>
    /// Test whether ResponseValue should be serialized
    /// </summary>
    public virtual bool ShouldSerializeResponseValue()
    {
        return ResponseValue != null && ResponseValue.Count > 0;
    }
    
    /// <summary>
    /// Test whether includesHeaderRow should be serialized
    /// </summary>
    public virtual bool ShouldSerializeincludesHeaderRow()
    {
        if (_shouldSerializeincludesHeaderRow)
        {
            return true;
        }
        return (_includesHeaderRow != default(bool));
    }
}
}
#pragma warning restore
