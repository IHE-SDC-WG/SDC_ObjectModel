// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Structure to define a person's name, including prefixes, suffixes, and degrees.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("NameType")]
public partial class NameType : ExtensionBaseType
{
    #region Private fields
    private string_Stype _namePrefix;
    private string_Stype _firstName;
    private string_Stype _middleName;
    private string_Stype _lastName;
    private string_Stype _nameSuffix;
    private List<string_Stype> _degreeCert;
    private string_Stype _title;
    #endregion
    
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype NamePrefix
    {
        get
        {
            return _namePrefix;
        }
        set
        {
            if ((_namePrefix == value))
            {
                return;
            }
            if (((_namePrefix == null) 
                        || (_namePrefix.Equals(value) != true)))
            {
                _namePrefix = value;
                OnPropertyChanged("NamePrefix", value);
            }
        }
    }
    
    [XmlElement(IsNullable=true, Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype FirstName
    {
        get
        {
            return _firstName;
        }
        set
        {
            if ((_firstName == value))
            {
                return;
            }
            if (((_firstName == null) 
                        || (_firstName.Equals(value) != true)))
            {
                _firstName = value;
                OnPropertyChanged("FirstName", value);
            }
        }
    }
    
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype MiddleName
    {
        get
        {
            return _middleName;
        }
        set
        {
            if ((_middleName == value))
            {
                return;
            }
            if (((_middleName == null) 
                        || (_middleName.Equals(value) != true)))
            {
                _middleName = value;
                OnPropertyChanged("MiddleName", value);
            }
        }
    }
    
    [XmlElement(IsNullable=true, Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype LastName
    {
        get
        {
            return _lastName;
        }
        set
        {
            if ((_lastName == value))
            {
                return;
            }
            if (((_lastName == null) 
                        || (_lastName.Equals(value) != true)))
            {
                _lastName = value;
                OnPropertyChanged("LastName", value);
            }
        }
    }
    
    [XmlElement(Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype NameSuffix
    {
        get
        {
            return _nameSuffix;
        }
        set
        {
            if ((_nameSuffix == value))
            {
                return;
            }
            if (((_nameSuffix == null) 
                        || (_nameSuffix.Equals(value) != true)))
            {
                _nameSuffix = value;
                OnPropertyChanged("NameSuffix", value);
            }
        }
    }
    
    /// <summary>
    /// Acronyms for degrees and certifications, e.g., MD, PhD, FACP (repeat element for each acronym)
    /// </summary>
    [XmlElement("DegreeCert", Order=5)]
    [JsonProperty(Order=5, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<string_Stype> DegreeCert
    {
        get
        {
            return _degreeCert;
        }
        set
        {
            if ((_degreeCert == value))
            {
                return;
            }
            if (((_degreeCert == null) 
                        || (_degreeCert.Equals(value) != true)))
            {
                _degreeCert = value;
                OnPropertyChanged("DegreeCert", value);
            }
        }
    }
    
    [XmlElement(Order=6)]
    [JsonProperty(Order=6, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Title
    {
        get
        {
            return _title;
        }
        set
        {
            if ((_title == value))
            {
                return;
            }
            if (((_title == null) 
                        || (_title.Equals(value) != true)))
            {
                _title = value;
                OnPropertyChanged("Title", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether DegreeCert should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDegreeCert()
    {
        return DegreeCert != null && DegreeCert.Count > 0;
    }
    
    /// <summary>
    /// Test whether NamePrefix should be serialized
    /// </summary>
    public virtual bool ShouldSerializeNamePrefix()
    {
        return (_namePrefix != null);
    }
    
    /// <summary>
    /// Test whether FirstName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFirstName()
    {
        return (_firstName != null);
    }
    
    /// <summary>
    /// Test whether MiddleName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeMiddleName()
    {
        return (_middleName != null);
    }
    
    /// <summary>
    /// Test whether LastName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLastName()
    {
        return (_lastName != null);
    }
    
    /// <summary>
    /// Test whether NameSuffix should be serialized
    /// </summary>
    public virtual bool ShouldSerializeNameSuffix()
    {
        return (_nameSuffix != null);
    }
    
    /// <summary>
    /// Test whether Title should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTitle()
    {
        return (_title != null);
    }
}
}
#pragma warning restore
