// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// This type is used to act upon the value of common item properties. If
/// an "act" property (a property with the "act" prefix) has no value assigned, it is
/// ignored. If it has a value, then that property on the target item(s) assume(s) that
/// stated value when an attached Boolean condition evaluates to true. The attached
/// condition may be an "If" statement or any expression that evaluates to a Boolean
/// value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("ActSetAttrValueScriptType")]
public partial class ActSetAttrValueScriptType : ScriptCodeAnyType
{
    private ItemNameAttributeType _target;
    private bool _targetSpecified;
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual ItemNameAttributeType Target
    {
        get
        {
            return _target;
        }
        set
        {
            if ((_target == value))
            {
                return;
            }
            if (((_target == null) 
                        || (_target.Equals(value) != true)))
            {
                _target = value;
                OnPropertyChanged("Target", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool TargetSpecified
    {
        get
        {
            return _targetSpecified;
        }
        set
        {
            _targetSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Target should be serialized
    /// </summary>
    public virtual bool ShouldSerializeTarget()
    {
        return (Target != null);
    }
}
}
#pragma warning restore
