// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// A generic structure for recording languages.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("LanguageType")]
public partial class LanguageType : ExtensionBaseType
{
    private string_Stype _language;
    private LanguageCodeISO6393_Type _languageCodeISO6393;
    private bool _languageSpecified;
    private bool _languageCodeISO6393Specified;
    /// <summary>
    /// The language used for text in SDC templates.
    /// </summary>
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Language
    {
        get
        {
            return _language;
        }
        set
        {
            if ((_language == value))
            {
                return;
            }
            if (((_language == null) 
                        || (_language.Equals(value) != true)))
            {
                _language = value;
                OnPropertyChanged("Language", value);
            }
        }
    }
    
    [XmlElement("LanguageCode.ISO.639.3", Order=1)]
    [JsonProperty("LanguageCode.ISO.639.3", Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual LanguageCodeISO6393_Type LanguageCodeISO6393
    {
        get
        {
            return _languageCodeISO6393;
        }
        set
        {
            if ((_languageCodeISO6393 == value))
            {
                return;
            }
            if (((_languageCodeISO6393 == null) 
                        || (_languageCodeISO6393.Equals(value) != true)))
            {
                _languageCodeISO6393 = value;
                OnPropertyChanged("LanguageCodeISO6393", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool LanguageSpecified
    {
        get
        {
            return _languageSpecified;
        }
        set
        {
            _languageSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool LanguageCodeISO6393Specified
    {
        get
        {
            return _languageCodeISO6393Specified;
        }
        set
        {
            _languageCodeISO6393Specified = value;
        }
    }
    
    /// <summary>
    /// Test whether Language should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLanguage()
    {
        return (Language != null);
    }
    
    /// <summary>
    /// Test whether LanguageCodeISO6393 should be serialized
    /// </summary>
    public virtual bool ShouldSerializeLanguageCodeISO6393()
    {
        return (LanguageCodeISO6393 != null);
    }
}
}
#pragma warning restore
