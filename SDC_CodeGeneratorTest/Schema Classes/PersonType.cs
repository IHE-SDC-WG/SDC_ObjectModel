// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// A model structure for a Person object.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("PersonType")]
public partial class PersonType : ExtensionBaseType
{
    private NameType _personName;
    private List<NameType> _aliasName;
    private List<JobType> _job;
    private List<AddressType> _streetAddress;
    private List<EmailType> _email;
    private List<PhoneType> _phone;
    private List<anyURI_Stype> _webURL;
    private string_Stype _role;
    private List<IdentifierType> _identifier;
    private string_Stype _usage;
    private bool _personNameSpecified;
    private bool _aliasNameSpecified;
    private bool _jobSpecified;
    private bool _streetAddressSpecified;
    private bool _emailSpecified;
    private bool _phoneSpecified;
    private bool _webURLSpecified;
    private bool _roleSpecified;
    private bool _identifierSpecified;
    private bool _usageSpecified;
    [XmlElement(Order=0)]
    [RequiredAttribute()]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual NameType PersonName
    {
        get
        {
            return _personName;
        }
        set
        {
            if ((_personName == value))
            {
                return;
            }
            if (((_personName == null) 
                        || (_personName.Equals(value) != true)))
            {
                ValidationContext validatorPropContext = new ValidationContext(this, null, null);
                validatorPropContext.MemberName = "PersonName";
                Validator.ValidateProperty(value, validatorPropContext);
                _personName = value;
                OnPropertyChanged("PersonName", value);
            }
        }
    }
    
    [XmlElement("AliasName", Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<NameType> AliasName
    {
        get
        {
            return _aliasName;
        }
        set
        {
            if ((_aliasName == value))
            {
                return;
            }
            if (((_aliasName == null) 
                        || (_aliasName.Equals(value) != true)))
            {
                _aliasName = value;
                OnPropertyChanged("AliasName", value);
            }
        }
    }
    
    [XmlElement("Job", Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<JobType> Job
    {
        get
        {
            return _job;
        }
        set
        {
            if ((_job == value))
            {
                return;
            }
            if (((_job == null) 
                        || (_job.Equals(value) != true)))
            {
                _job = value;
                OnPropertyChanged("Job", value);
            }
        }
    }
    
    [XmlElement("StreetAddress", Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<AddressType> StreetAddress
    {
        get
        {
            return _streetAddress;
        }
        set
        {
            if ((_streetAddress == value))
            {
                return;
            }
            if (((_streetAddress == null) 
                        || (_streetAddress.Equals(value) != true)))
            {
                _streetAddress = value;
                OnPropertyChanged("StreetAddress", value);
            }
        }
    }
    
    [XmlElement("Email", Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<EmailType> Email
    {
        get
        {
            return _email;
        }
        set
        {
            if ((_email == value))
            {
                return;
            }
            if (((_email == null) 
                        || (_email.Equals(value) != true)))
            {
                _email = value;
                OnPropertyChanged("Email", value);
            }
        }
    }
    
    [XmlElement("Phone", Order=5)]
    [JsonProperty(Order=5, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<PhoneType> Phone
    {
        get
        {
            return _phone;
        }
        set
        {
            if ((_phone == value))
            {
                return;
            }
            if (((_phone == null) 
                        || (_phone.Equals(value) != true)))
            {
                _phone = value;
                OnPropertyChanged("Phone", value);
            }
        }
    }
    
    [XmlElement("WebURL", Order=6)]
    [JsonProperty(Order=6, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<anyURI_Stype> WebURL
    {
        get
        {
            return _webURL;
        }
        set
        {
            if ((_webURL == value))
            {
                return;
            }
            if (((_webURL == null) 
                        || (_webURL.Equals(value) != true)))
            {
                _webURL = value;
                OnPropertyChanged("WebURL", value);
            }
        }
    }
    
    /// <summary>
    /// Role of the person, e.g., creator, copyright holder, accreditor, certifier, curator, etc.
    /// </summary>
    [XmlElement(Order=7)]
    [JsonProperty(Order=7, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Role
    {
        get
        {
            return _role;
        }
        set
        {
            if ((_role == value))
            {
                return;
            }
            if (((_role == null) 
                        || (_role.Equals(value) != true)))
            {
                _role = value;
                OnPropertyChanged("Role", value);
            }
        }
    }
    
    [XmlElement("Identifier", Order=8)]
    [JsonProperty(Order=8, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<IdentifierType> Identifier
    {
        get
        {
            return _identifier;
        }
        set
        {
            if ((_identifier == value))
            {
                return;
            }
            if (((_identifier == null) 
                        || (_identifier.Equals(value) != true)))
            {
                _identifier = value;
                OnPropertyChanged("Identifier", value);
            }
        }
    }
    
    /// <summary>
    /// When this person should be contacted.
    /// </summary>
    [XmlElement(Order=9)]
    [JsonProperty(Order=9, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Usage
    {
        get
        {
            return _usage;
        }
        set
        {
            if ((_usage == value))
            {
                return;
            }
            if (((_usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                _usage = value;
                OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PersonNameSpecified
    {
        get
        {
            return _personNameSpecified;
        }
        set
        {
            _personNameSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool AliasNameSpecified
    {
        get
        {
            return _aliasNameSpecified;
        }
        set
        {
            _aliasNameSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool JobSpecified
    {
        get
        {
            return _jobSpecified;
        }
        set
        {
            _jobSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool StreetAddressSpecified
    {
        get
        {
            return _streetAddressSpecified;
        }
        set
        {
            _streetAddressSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool EmailSpecified
    {
        get
        {
            return _emailSpecified;
        }
        set
        {
            _emailSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PhoneSpecified
    {
        get
        {
            return _phoneSpecified;
        }
        set
        {
            _phoneSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool WebURLSpecified
    {
        get
        {
            return _webURLSpecified;
        }
        set
        {
            _webURLSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool RoleSpecified
    {
        get
        {
            return _roleSpecified;
        }
        set
        {
            _roleSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool IdentifierSpecified
    {
        get
        {
            return _identifierSpecified;
        }
        set
        {
            _identifierSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return _usageSpecified;
        }
        set
        {
            _usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether AliasName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAliasName()
    {
        return AliasName != null && AliasName.Count > 0;
    }
    
    /// <summary>
    /// Test whether Job should be serialized
    /// </summary>
    public virtual bool ShouldSerializeJob()
    {
        return Job != null && Job.Count > 0;
    }
    
    /// <summary>
    /// Test whether StreetAddress should be serialized
    /// </summary>
    public virtual bool ShouldSerializeStreetAddress()
    {
        return StreetAddress != null && StreetAddress.Count > 0;
    }
    
    /// <summary>
    /// Test whether Email should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEmail()
    {
        return Email != null && Email.Count > 0;
    }
    
    /// <summary>
    /// Test whether Phone should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhone()
    {
        return Phone != null && Phone.Count > 0;
    }
    
    /// <summary>
    /// Test whether WebURL should be serialized
    /// </summary>
    public virtual bool ShouldSerializeWebURL()
    {
        return WebURL != null && WebURL.Count > 0;
    }
    
    /// <summary>
    /// Test whether Identifier should be serialized
    /// </summary>
    public virtual bool ShouldSerializeIdentifier()
    {
        return Identifier != null && Identifier.Count > 0;
    }
    
    /// <summary>
    /// Test whether PersonName should be serialized
    /// </summary>
    public virtual bool ShouldSerializePersonName()
    {
        return (PersonName != null);
    }
    
    /// <summary>
    /// Test whether Role should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRole()
    {
        return (Role != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (Usage != null);
    }
}
}
#pragma warning restore
