// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("TemplateAdminTypeDigitalSignatureSignatureProperties")]
public partial class TemplateAdminTypeDigitalSignatureSignatureProperties : ExtensionBaseType
{
    private ContactType _signer;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate _signerPublicKeyCertificate;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason _signatureReason;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp _signatureDateTimeStamp;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority _x_CertificateAuthority;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey _x_SignerPublicKey;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm _x_SignatureAlgorithm;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesImage _image;
    private bool _signerSpecified;
    private bool _signerPublicKeyCertificateSpecified;
    private bool _signatureReasonSpecified;
    private bool _signatureDateTimeStampSpecified;
    private bool _x_CertificateAuthoritySpecified;
    private bool _x_SignerPublicKeySpecified;
    private bool _x_SignatureAlgorithmSpecified;
    private bool _imageSpecified;
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual ContactType Signer
    {
        get
        {
            return _signer;
        }
        set
        {
            if ((_signer == value))
            {
                return;
            }
            if (((_signer == null) 
                        || (_signer.Equals(value) != true)))
            {
                _signer = value;
                OnPropertyChanged("Signer", value);
            }
        }
    }
    
    [XmlElement(Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate SignerPublicKeyCertificate
    {
        get
        {
            return _signerPublicKeyCertificate;
        }
        set
        {
            if ((_signerPublicKeyCertificate == value))
            {
                return;
            }
            if (((_signerPublicKeyCertificate == null) 
                        || (_signerPublicKeyCertificate.Equals(value) != true)))
            {
                _signerPublicKeyCertificate = value;
                OnPropertyChanged("SignerPublicKeyCertificate", value);
            }
        }
    }
    
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason SignatureReason
    {
        get
        {
            return _signatureReason;
        }
        set
        {
            if ((_signatureReason == value))
            {
                return;
            }
            if (((_signatureReason == null) 
                        || (_signatureReason.Equals(value) != true)))
            {
                _signatureReason = value;
                OnPropertyChanged("SignatureReason", value);
            }
        }
    }
    
    [XmlElement(Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp SignatureDateTimeStamp
    {
        get
        {
            return _signatureDateTimeStamp;
        }
        set
        {
            if ((_signatureDateTimeStamp == value))
            {
                return;
            }
            if (((_signatureDateTimeStamp == null) 
                        || (_signatureDateTimeStamp.Equals(value) != true)))
            {
                _signatureDateTimeStamp = value;
                OnPropertyChanged("SignatureDateTimeStamp", value);
            }
        }
    }
    
    [XmlElement(Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_CertificateAuthority X_CertificateAuthority
    {
        get
        {
            return _x_CertificateAuthority;
        }
        set
        {
            if ((_x_CertificateAuthority == value))
            {
                return;
            }
            if (((_x_CertificateAuthority == null) 
                        || (_x_CertificateAuthority.Equals(value) != true)))
            {
                _x_CertificateAuthority = value;
                OnPropertyChanged("X_CertificateAuthority", value);
            }
        }
    }
    
    [XmlElement(Order=5)]
    [JsonProperty(Order=5, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignerPublicKey X_SignerPublicKey
    {
        get
        {
            return _x_SignerPublicKey;
        }
        set
        {
            if ((_x_SignerPublicKey == value))
            {
                return;
            }
            if (((_x_SignerPublicKey == null) 
                        || (_x_SignerPublicKey.Equals(value) != true)))
            {
                _x_SignerPublicKey = value;
                OnPropertyChanged("X_SignerPublicKey", value);
            }
        }
    }
    
    [XmlElement(Order=6)]
    [JsonProperty(Order=6, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesX_SignatureAlgorithm X_SignatureAlgorithm
    {
        get
        {
            return _x_SignatureAlgorithm;
        }
        set
        {
            if ((_x_SignatureAlgorithm == value))
            {
                return;
            }
            if (((_x_SignatureAlgorithm == null) 
                        || (_x_SignatureAlgorithm.Equals(value) != true)))
            {
                _x_SignatureAlgorithm = value;
                OnPropertyChanged("X_SignatureAlgorithm", value);
            }
        }
    }
    
    [XmlElement(Order=7)]
    [JsonProperty(Order=7, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesImage Image
    {
        get
        {
            return _image;
        }
        set
        {
            if ((_image == value))
            {
                return;
            }
            if (((_image == null) 
                        || (_image.Equals(value) != true)))
            {
                _image = value;
                OnPropertyChanged("Image", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool SignerSpecified
    {
        get
        {
            return _signerSpecified;
        }
        set
        {
            _signerSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool SignerPublicKeyCertificateSpecified
    {
        get
        {
            return _signerPublicKeyCertificateSpecified;
        }
        set
        {
            _signerPublicKeyCertificateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool SignatureReasonSpecified
    {
        get
        {
            return _signatureReasonSpecified;
        }
        set
        {
            _signatureReasonSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool SignatureDateTimeStampSpecified
    {
        get
        {
            return _signatureDateTimeStampSpecified;
        }
        set
        {
            _signatureDateTimeStampSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool X_CertificateAuthoritySpecified
    {
        get
        {
            return _x_CertificateAuthoritySpecified;
        }
        set
        {
            _x_CertificateAuthoritySpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool X_SignerPublicKeySpecified
    {
        get
        {
            return _x_SignerPublicKeySpecified;
        }
        set
        {
            _x_SignerPublicKeySpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool X_SignatureAlgorithmSpecified
    {
        get
        {
            return _x_SignatureAlgorithmSpecified;
        }
        set
        {
            _x_SignatureAlgorithmSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ImageSpecified
    {
        get
        {
            return _imageSpecified;
        }
        set
        {
            _imageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether Signer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSigner()
    {
        return (Signer != null);
    }
    
    /// <summary>
    /// Test whether SignerPublicKeyCertificate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignerPublicKeyCertificate()
    {
        return (SignerPublicKeyCertificate != null);
    }
    
    /// <summary>
    /// Test whether SignatureReason should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureReason()
    {
        return (SignatureReason != null);
    }
    
    /// <summary>
    /// Test whether SignatureDateTimeStamp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureDateTimeStamp()
    {
        return (SignatureDateTimeStamp != null);
    }
    
    /// <summary>
    /// Test whether X_CertificateAuthority should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_CertificateAuthority()
    {
        return (X_CertificateAuthority != null);
    }
    
    /// <summary>
    /// Test whether X_SignerPublicKey should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_SignerPublicKey()
    {
        return (X_SignerPublicKey != null);
    }
    
    /// <summary>
    /// Test whether X_SignatureAlgorithm should be serialized
    /// </summary>
    public virtual bool ShouldSerializeX_SignatureAlgorithm()
    {
        return (X_SignatureAlgorithm != null);
    }
    
    /// <summary>
    /// Test whether Image should be serialized
    /// </summary>
    public virtual bool ShouldSerializeImage()
    {
        return (Image != null);
    }
}
}
#pragma warning restore
