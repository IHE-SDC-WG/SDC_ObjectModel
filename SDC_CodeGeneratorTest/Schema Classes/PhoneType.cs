// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// A structure for recording telephone numbers.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("PhoneType")]
public partial class PhoneType : ExtensionBaseType
{
    private string_Stype _phoneType1;
    private CountryCodeType _countryCode;
    private AreaCodeType _areaCode;
    private PhoneNumberType _phoneNumber;
    private string_Stype _phoneExtension;
    private string_Stype _usage;
    private bool _phoneType1Specified;
    private bool _countryCodeSpecified;
    private bool _areaCodeSpecified;
    private bool _phoneNumberSpecified;
    private bool _phoneExtensionSpecified;
    private bool _usageSpecified;
    [XmlElement("PhoneType", Order=0)]
    [JsonProperty("PhoneType", Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype PhoneType1
    {
        get
        {
            return _phoneType1;
        }
        set
        {
            if ((_phoneType1 == value))
            {
                return;
            }
            if (((_phoneType1 == null) 
                        || (_phoneType1.Equals(value) != true)))
            {
                _phoneType1 = value;
                OnPropertyChanged("PhoneType1", value);
            }
        }
    }
    
    [XmlElement(Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual CountryCodeType CountryCode
    {
        get
        {
            return _countryCode;
        }
        set
        {
            if ((_countryCode == value))
            {
                return;
            }
            if (((_countryCode == null) 
                        || (_countryCode.Equals(value) != true)))
            {
                _countryCode = value;
                OnPropertyChanged("CountryCode", value);
            }
        }
    }
    
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual AreaCodeType AreaCode
    {
        get
        {
            return _areaCode;
        }
        set
        {
            if ((_areaCode == value))
            {
                return;
            }
            if (((_areaCode == null) 
                        || (_areaCode.Equals(value) != true)))
            {
                _areaCode = value;
                OnPropertyChanged("AreaCode", value);
            }
        }
    }
    
    [XmlElement(Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual PhoneNumberType PhoneNumber
    {
        get
        {
            return _phoneNumber;
        }
        set
        {
            if ((_phoneNumber == value))
            {
                return;
            }
            if (((_phoneNumber == null) 
                        || (_phoneNumber.Equals(value) != true)))
            {
                _phoneNumber = value;
                OnPropertyChanged("PhoneNumber", value);
            }
        }
    }
    
    [XmlElement(Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype PhoneExtension
    {
        get
        {
            return _phoneExtension;
        }
        set
        {
            if ((_phoneExtension == value))
            {
                return;
            }
            if (((_phoneExtension == null) 
                        || (_phoneExtension.Equals(value) != true)))
            {
                _phoneExtension = value;
                OnPropertyChanged("PhoneExtension", value);
            }
        }
    }
    
    /// <summary>
    /// When this phone number should be used
    /// </summary>
    [XmlElement(Order=5)]
    [JsonProperty(Order=5, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Usage
    {
        get
        {
            return _usage;
        }
        set
        {
            if ((_usage == value))
            {
                return;
            }
            if (((_usage == null) 
                        || (_usage.Equals(value) != true)))
            {
                _usage = value;
                OnPropertyChanged("Usage", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PhoneType1Specified
    {
        get
        {
            return _phoneType1Specified;
        }
        set
        {
            _phoneType1Specified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool CountryCodeSpecified
    {
        get
        {
            return _countryCodeSpecified;
        }
        set
        {
            _countryCodeSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool AreaCodeSpecified
    {
        get
        {
            return _areaCodeSpecified;
        }
        set
        {
            _areaCodeSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PhoneNumberSpecified
    {
        get
        {
            return _phoneNumberSpecified;
        }
        set
        {
            _phoneNumberSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PhoneExtensionSpecified
    {
        get
        {
            return _phoneExtensionSpecified;
        }
        set
        {
            _phoneExtensionSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool UsageSpecified
    {
        get
        {
            return _usageSpecified;
        }
        set
        {
            _usageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PhoneType1 should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneType1()
    {
        return (PhoneType1 != null);
    }
    
    /// <summary>
    /// Test whether CountryCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializeCountryCode()
    {
        return (CountryCode != null);
    }
    
    /// <summary>
    /// Test whether AreaCode should be serialized
    /// </summary>
    public virtual bool ShouldSerializeAreaCode()
    {
        return (AreaCode != null);
    }
    
    /// <summary>
    /// Test whether PhoneNumber should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneNumber()
    {
        return (PhoneNumber != null);
    }
    
    /// <summary>
    /// Test whether PhoneExtension should be serialized
    /// </summary>
    public virtual bool ShouldSerializePhoneExtension()
    {
        return (PhoneExtension != null);
    }
    
    /// <summary>
    /// Test whether Usage should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsage()
    {
        return (Usage != null);
    }
}
}
#pragma warning restore
