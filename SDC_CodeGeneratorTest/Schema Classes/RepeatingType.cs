// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// This type presents any display objects that may be repeated based upon
/// on the user's interaction with the form objects. Items derived from this type
/// include Sections and Questions.
/// </summary>
[XmlInclude(typeof(QuestionItemBaseType))]
[XmlInclude(typeof(QuestionItemType))]
[XmlInclude(typeof(SectionBaseType))]
[XmlInclude(typeof(SectionItemType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("RepeatingType")]
public abstract partial class RepeatingType : DisplayedType
{
    private ushort _minCard;
    private ushort _maxCard;
    private string _repeat;
    private string _instanceGUID;
    private string _parentGUID;
    private bool _minCardSpecified;
    private bool _maxCardSpecified;
    private bool _repeatSpecified;
    private bool _instanceGUIDSpecified;
    private bool _parentGUIDSpecified;
    /// <summary>
    /// RepeatingType class constructor
    /// </summary>
    public RepeatingType()
    {
        _minCard = ((ushort)(1));
        _maxCard = ((ushort)(1));
        _repeat = "0";
    }
    
    /// <summary>
    /// @minCard is the minimum number of repetitions allowed for
    /// a section or question. The default value is 1, indicating that the user
    /// must answer any question(s) that has this attribute set. If @minCard is
    /// set to 0, then the item and all descendent questions are optional to
    /// answer.
    /// </summary>
    [XmlAttribute]
    [DefaultValue(typeof(ushort), "1")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual ushort minCard
    {
        get
        {
            return _minCard;
        }
        set
        {
            if ((_minCard.Equals(value) != true))
            {
                _minCard = value;
                OnPropertyChanged("minCard", value);
            }
        }
    }
    
    /// <summary>
    /// @maxCard is the maximum number of repetitions allowed for
    /// a section or question. The default value is 1, indicating that the
    /// section or question cannot be repeated on the data entry form. A value
    /// of 0 indicates that the number of repeats is unlimited. If @maxCard is
    /// not 0, then Must be greater than or equal to minCard.
    /// </summary>
    [XmlAttribute]
    [DefaultValue(typeof(ushort), "1")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual ushort maxCard
    {
        get
        {
            return _maxCard;
        }
        set
        {
            if ((_maxCard.Equals(value) != true))
            {
                _maxCard = value;
                OnPropertyChanged("maxCard", value);
            }
        }
    }
    
    [XmlAttribute(DataType="nonNegativeInteger")]
    [DefaultValue("0")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string repeat
    {
        get
        {
            return _repeat;
        }
        set
        {
            if ((_repeat == value))
            {
                return;
            }
            if (((_repeat == null) 
                        || (_repeat.Equals(value) != true)))
            {
                _repeat = value;
                OnPropertyChanged("repeat", value);
            }
        }
    }
    
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string instanceGUID
    {
        get
        {
            return _instanceGUID;
        }
        set
        {
            if ((_instanceGUID == value))
            {
                return;
            }
            if (((_instanceGUID == null) 
                        || (_instanceGUID.Equals(value) != true)))
            {
                _instanceGUID = value;
                OnPropertyChanged("instanceGUID", value);
            }
        }
    }
    
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string parentGUID
    {
        get
        {
            return _parentGUID;
        }
        set
        {
            if ((_parentGUID == value))
            {
                return;
            }
            if (((_parentGUID == null) 
                        || (_parentGUID.Equals(value) != true)))
            {
                _parentGUID = value;
                OnPropertyChanged("parentGUID", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool minCardSpecified
    {
        get
        {
            return _minCardSpecified;
        }
        set
        {
            _minCardSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool maxCardSpecified
    {
        get
        {
            return _maxCardSpecified;
        }
        set
        {
            _maxCardSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool repeatSpecified
    {
        get
        {
            return _repeatSpecified;
        }
        set
        {
            _repeatSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool instanceGUIDSpecified
    {
        get
        {
            return _instanceGUIDSpecified;
        }
        set
        {
            _instanceGUIDSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool parentGUIDSpecified
    {
        get
        {
            return _parentGUIDSpecified;
        }
        set
        {
            _parentGUIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether repeat should be serialized
    /// </summary>
    public virtual bool ShouldSerializerepeat()
    {
        return !string.IsNullOrEmpty(repeat);
    }
    
    /// <summary>
    /// Test whether instanceGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeinstanceGUID()
    {
        return !string.IsNullOrEmpty(instanceGUID);
    }
    
    /// <summary>
    /// Test whether parentGUID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeparentGUID()
    {
        return !string.IsNullOrEmpty(parentGUID);
    }
}
}
#pragma warning restore
