// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Moved from SDCFormDesign
/// The type is a standard way to point to a named item anywhere in a FormDesign template.  A named item is any element that has the @name attribute set to a unique value.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("ItemNameAttributeType")]
public partial class ItemNameAttributeType : ItemNameType
{
    private string _attributeName;
    private bool _attributeNameSpecified;
    /// <summary>
    /// ItemNameAttributeType class constructor
    /// </summary>
    public ItemNameAttributeType()
    {
        _attributeName = "val";
    }
    
    [XmlAttribute(DataType="NCName")]
    [DefaultValue("val")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string attributeName
    {
        get
        {
            return _attributeName;
        }
        set
        {
            if ((_attributeName == value))
            {
                return;
            }
            if (((_attributeName == null) 
                        || (_attributeName.Equals(value) != true)))
            {
                _attributeName = value;
                OnPropertyChanged("attributeName", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool attributeNameSpecified
    {
        get
        {
            return _attributeNameSpecified;
        }
        set
        {
            _attributeNameSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether attributeName should be serialized
    /// </summary>
    public virtual bool ShouldSerializeattributeName()
    {
        return !string.IsNullOrEmpty(attributeName);
    }
}
}
#pragma warning restore
