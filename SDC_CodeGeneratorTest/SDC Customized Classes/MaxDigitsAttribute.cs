// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

    #region MaxDigitsAttribute
    public class MaxDigitsAttribute : ValidationAttribute
    {
        private readonly int _max;
        private readonly int _min;

        public MaxDigitsAttribute(int max, int min = 0)
        {
            _max = max;
            _min = min;
        }

        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
            if (!IsValid(value))
            {
                return new ValidationResult(FormatErrorMessage(validationContext.DisplayName));
            }

            return null;
        }

        public override bool IsValid(object value)
        {
            // you could do any custom validation you like if (value is int) {

            //var stringValue = "" + (int)value;
            var stringValue = "";
            stringValue += value?.ToString();
            var length = stringValue.Length;
            if (length >= _min && length <= _max)
                return true;            
            return false;

            //return IsValid2(value);
        }

        //internal bool IsValid2<T>(T value)
        //{
        //    try
        //    {
        //        var stringValue = "" + (T)value; //this only works for numeric SDC value types
        //        var length = stringValue.Length;
        //        if (length >= _min && length <= _max)
        //            return true;                
        //    }
        //    catch { return false; }   

        //    return false;
        //}
        #endregion
    }
}
#pragma warning restore
