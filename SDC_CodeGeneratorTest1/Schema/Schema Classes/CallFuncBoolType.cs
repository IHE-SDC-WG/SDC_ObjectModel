// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// Function or web service that returns a string value.
/// </summary>
[XmlInclude(typeof(CallFuncBoolActionType))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("CallFuncBoolType")]
public partial class CallFuncBoolType : CallFuncBaseType
{
    private bool _shouldSerializenot;
    private bool _not;
    private string _validationMessage;
    private bool _notSpecified;
    private bool _validationMessageSpecified;
    /// <summary>
    /// CallFuncBoolType class constructor
    /// </summary>
    public CallFuncBoolType()
    {
        _not = false;
    }
    
    /// <summary>
    /// If @not="true" then the logical value of the conditions of the parent element is negated; true becomes false and false becomes true.
    /// </summary>
    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual bool not
    {
        get
        {
            return _not;
        }
        set
        {
            if ((_not.Equals(value) != true))
            {
                _not = value;
                OnPropertyChanged("not", value);
            }
            _shouldSerializenot = true;
        }
    }
    
    /// <summary>
    /// Optional message that appears when the rule evaluates to true
    /// </summary>
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string validationMessage
    {
        get
        {
            return _validationMessage;
        }
        set
        {
            if ((_validationMessage == value))
            {
                return;
            }
            if (((_validationMessage == null) 
                        || (_validationMessage.Equals(value) != true)))
            {
                _validationMessage = value;
                OnPropertyChanged("validationMessage", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool notSpecified
    {
        get
        {
            return _notSpecified;
        }
        set
        {
            _notSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool validationMessageSpecified
    {
        get
        {
            return _validationMessageSpecified;
        }
        set
        {
            _validationMessageSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether not should be serialized
    /// </summary>
    public virtual bool ShouldSerializenot()
    {
        if (_shouldSerializenot)
        {
            return true;
        }
        return (not != default(bool));
    }
    
    /// <summary>
    /// Test whether validationMessage should be serialized
    /// </summary>
    public virtual bool ShouldSerializevalidationMessage()
    {
        return !string.IsNullOrEmpty(validationMessage);
    }
}
}
#pragma warning restore
