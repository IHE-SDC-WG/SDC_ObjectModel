// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// List of standard kinds of dates that may apply to a file or its usage.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("FileDatesType")]
public partial class FileDatesType : ExtensionBaseType
{
    private dateTime_Stype _fileDate;
    private List<dateTime_Stype> _previousRevisionDate;
    private dateTime_Stype _releaseDate;
    private dateTime_Stype _effectiveDate;
    private dateTime_Stype _firstReleaseDate;
    private dateTime_Stype _usageStartDate;
    private dateTime_Stype _retirementDate;
    private List<dateTime_Stype> _otherDate;
    private bool _fileDateSpecified;
    private bool _previousRevisionDateSpecified;
    private bool _releaseDateSpecified;
    private bool _effectiveDateSpecified;
    private bool _firstReleaseDateSpecified;
    private bool _usageStartDateSpecified;
    private bool _retirementDateSpecified;
    private bool _otherDateSpecified;
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype FileDate
    {
        get
        {
            return _fileDate;
        }
        set
        {
            if ((_fileDate == value))
            {
                return;
            }
            if (((_fileDate == null) 
                        || (_fileDate.Equals(value) != true)))
            {
                _fileDate = value;
                OnPropertyChanged("FileDate", value);
            }
        }
    }
    
    [XmlElement("PreviousRevisionDate", Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<dateTime_Stype> PreviousRevisionDate
    {
        get
        {
            return _previousRevisionDate;
        }
        set
        {
            if ((_previousRevisionDate == value))
            {
                return;
            }
            if (((_previousRevisionDate == null) 
                        || (_previousRevisionDate.Equals(value) != true)))
            {
                _previousRevisionDate = value;
                OnPropertyChanged("PreviousRevisionDate", value);
            }
        }
    }
    
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype ReleaseDate
    {
        get
        {
            return _releaseDate;
        }
        set
        {
            if ((_releaseDate == value))
            {
                return;
            }
            if (((_releaseDate == null) 
                        || (_releaseDate.Equals(value) != true)))
            {
                _releaseDate = value;
                OnPropertyChanged("ReleaseDate", value);
            }
        }
    }
    
    [XmlElement(Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype EffectiveDate
    {
        get
        {
            return _effectiveDate;
        }
        set
        {
            if ((_effectiveDate == value))
            {
                return;
            }
            if (((_effectiveDate == null) 
                        || (_effectiveDate.Equals(value) != true)))
            {
                _effectiveDate = value;
                OnPropertyChanged("EffectiveDate", value);
            }
        }
    }
    
    [XmlElement(Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype FirstReleaseDate
    {
        get
        {
            return _firstReleaseDate;
        }
        set
        {
            if ((_firstReleaseDate == value))
            {
                return;
            }
            if (((_firstReleaseDate == null) 
                        || (_firstReleaseDate.Equals(value) != true)))
            {
                _firstReleaseDate = value;
                OnPropertyChanged("FirstReleaseDate", value);
            }
        }
    }
    
    [XmlElement(Order=5)]
    [JsonProperty(Order=5, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype UsageStartDate
    {
        get
        {
            return _usageStartDate;
        }
        set
        {
            if ((_usageStartDate == value))
            {
                return;
            }
            if (((_usageStartDate == null) 
                        || (_usageStartDate.Equals(value) != true)))
            {
                _usageStartDate = value;
                OnPropertyChanged("UsageStartDate", value);
            }
        }
    }
    
    [XmlElement(Order=6)]
    [JsonProperty(Order=6, NullValueHandling=NullValueHandling.Ignore)]
    public virtual dateTime_Stype RetirementDate
    {
        get
        {
            return _retirementDate;
        }
        set
        {
            if ((_retirementDate == value))
            {
                return;
            }
            if (((_retirementDate == null) 
                        || (_retirementDate.Equals(value) != true)))
            {
                _retirementDate = value;
                OnPropertyChanged("RetirementDate", value);
            }
        }
    }
    
    [XmlElement("OtherDate", Order=7)]
    [JsonProperty(Order=7, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<dateTime_Stype> OtherDate
    {
        get
        {
            return _otherDate;
        }
        set
        {
            if ((_otherDate == value))
            {
                return;
            }
            if (((_otherDate == null) 
                        || (_otherDate.Equals(value) != true)))
            {
                _otherDate = value;
                OnPropertyChanged("OtherDate", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool FileDateSpecified
    {
        get
        {
            return _fileDateSpecified;
        }
        set
        {
            _fileDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool PreviousRevisionDateSpecified
    {
        get
        {
            return _previousRevisionDateSpecified;
        }
        set
        {
            _previousRevisionDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ReleaseDateSpecified
    {
        get
        {
            return _releaseDateSpecified;
        }
        set
        {
            _releaseDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool EffectiveDateSpecified
    {
        get
        {
            return _effectiveDateSpecified;
        }
        set
        {
            _effectiveDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool FirstReleaseDateSpecified
    {
        get
        {
            return _firstReleaseDateSpecified;
        }
        set
        {
            _firstReleaseDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool UsageStartDateSpecified
    {
        get
        {
            return _usageStartDateSpecified;
        }
        set
        {
            _usageStartDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool RetirementDateSpecified
    {
        get
        {
            return _retirementDateSpecified;
        }
        set
        {
            _retirementDateSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool OtherDateSpecified
    {
        get
        {
            return _otherDateSpecified;
        }
        set
        {
            _otherDateSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether PreviousRevisionDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializePreviousRevisionDate()
    {
        return PreviousRevisionDate != null && PreviousRevisionDate.Count > 0;
    }
    
    /// <summary>
    /// Test whether OtherDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeOtherDate()
    {
        return OtherDate != null && OtherDate.Count > 0;
    }
    
    /// <summary>
    /// Test whether FileDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFileDate()
    {
        return (FileDate != null);
    }
    
    /// <summary>
    /// Test whether ReleaseDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReleaseDate()
    {
        return (ReleaseDate != null);
    }
    
    /// <summary>
    /// Test whether EffectiveDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeEffectiveDate()
    {
        return (EffectiveDate != null);
    }
    
    /// <summary>
    /// Test whether FirstReleaseDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeFirstReleaseDate()
    {
        return (FirstReleaseDate != null);
    }
    
    /// <summary>
    /// Test whether UsageStartDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeUsageStartDate()
    {
        return (UsageStartDate != null);
    }
    
    /// <summary>
    /// Test whether RetirementDate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeRetirementDate()
    {
        return (RetirementDate != null);
    }
}
}
#pragma warning restore
