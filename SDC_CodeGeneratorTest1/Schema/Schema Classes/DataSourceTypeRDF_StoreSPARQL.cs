// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("DataSourceTypeRDF_StoreSPARQL")]
public partial class DataSourceTypeRDF_StoreSPARQL : SdcEntityBase<DataSourceTypeRDF_StoreSPARQL>
{
    private string _version;
    private string _value;
    private bool _versionSpecified;
    private bool _valueSpecified;
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string version
    {
        get
        {
            return _version;
        }
        set
        {
            if ((_version == value))
            {
                return;
            }
            if (((_version == null) 
                        || (_version.Equals(value) != true)))
            {
                _version = value;
                OnPropertyChanged("version", value);
            }
        }
    }
    
    [XmlTextAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string Value
    {
        get
        {
            return _value;
        }
        set
        {
            if ((_value == value))
            {
                return;
            }
            if (((_value == null) 
                        || (_value.Equals(value) != true)))
            {
                _value = value;
                OnPropertyChanged("Value", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool versionSpecified
    {
        get
        {
            return _versionSpecified;
        }
        set
        {
            _versionSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ValueSpecified
    {
        get
        {
            return _valueSpecified;
        }
        set
        {
            _valueSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether version should be serialized
    /// </summary>
    public virtual bool ShouldSerializeversion()
    {
        return !string.IsNullOrEmpty(version);
    }
    
    /// <summary>
    /// Test whether Value should be serialized
    /// </summary>
    public virtual bool ShouldSerializeValue()
    {
        return !string.IsNullOrEmpty(Value);
    }
}
}
#pragma warning restore
