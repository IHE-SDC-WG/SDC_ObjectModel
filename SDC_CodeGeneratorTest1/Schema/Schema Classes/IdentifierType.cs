// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// A code or id that identifies a person or organization or object according to a standard
/// system such as CLIA or NPI. The system should be specified in the @system attribute.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("IdentifierType")]
public partial class IdentifierType : ExtensionBaseType
{
    private string _system;
    private string _val;
    private bool _systemSpecified;
    private bool _valSpecified;
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string system
    {
        get
        {
            return _system;
        }
        set
        {
            if ((_system == value))
            {
                return;
            }
            if (((_system == null) 
                        || (_system.Equals(value) != true)))
            {
                _system = value;
                OnPropertyChanged("system", value);
            }
        }
    }
    
    [XmlAttribute]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string val
    {
        get
        {
            return _val;
        }
        set
        {
            if ((_val == value))
            {
                return;
            }
            if (((_val == null) 
                        || (_val.Equals(value) != true)))
            {
                _val = value;
                OnPropertyChanged("val", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool systemSpecified
    {
        get
        {
            return _systemSpecified;
        }
        set
        {
            _systemSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool valSpecified
    {
        get
        {
            return _valSpecified;
        }
        set
        {
            _valSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether system should be serialized
    /// </summary>
    public virtual bool ShouldSerializesystem()
    {
        return !string.IsNullOrEmpty(system);
    }
    
    /// <summary>
    /// Test whether val should be serialized
    /// </summary>
    public virtual bool ShouldSerializeval()
    {
        return !string.IsNullOrEmpty(val);
    }
}
}
#pragma warning restore
