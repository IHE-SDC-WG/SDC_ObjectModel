// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("ProvenanceType")]
public partial class ProvenanceType : ExtensionBaseType
{
    private List<FileType> _replacedFile;
    private bool _replacedFileSpecified;
    [XmlElement("ReplacedFile", Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<FileType> ReplacedFile
    {
        get
        {
            return _replacedFile;
        }
        set
        {
            if ((_replacedFile == value))
            {
                return;
            }
            if (((_replacedFile == null) 
                        || (_replacedFile.Equals(value) != true)))
            {
                _replacedFile = value;
                OnPropertyChanged("ReplacedFile", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ReplacedFileSpecified
    {
        get
        {
            return _replacedFileSpecified;
        }
        set
        {
            _replacedFileSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ReplacedFile should be serialized
    /// </summary>
    public virtual bool ShouldSerializeReplacedFile()
    {
        return ReplacedFile != null && ReplacedFile.Count > 0;
    }
}
}
#pragma warning restore
