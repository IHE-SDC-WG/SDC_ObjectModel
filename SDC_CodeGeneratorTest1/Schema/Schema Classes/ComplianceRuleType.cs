// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.0.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// General information about how information in a particular form package must be handled.
/// This may include, e.g., security, completeness, transmission, and validation
/// criteria.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("ComplianceRuleType")]
public partial class ComplianceRuleType : ExtensionBaseType
{
    private string_Stype _description;
    private List<OrganizationType> _complianceOrganization;
    private string _ruleID;
    private string _formID;
    private bool _descriptionSpecified;
    private bool _complianceOrganizationSpecified;
    private bool _ruleIDSpecified;
    private bool _formIDSpecified;
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual string_Stype Description
    {
        get
        {
            return _description;
        }
        set
        {
            if ((_description == value))
            {
                return;
            }
            if (((_description == null) 
                        || (_description.Equals(value) != true)))
            {
                _description = value;
                OnPropertyChanged("Description", value);
            }
        }
    }
    
    [XmlElement("ComplianceOrganization", Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual List<OrganizationType> ComplianceOrganization
    {
        get
        {
            return _complianceOrganization;
        }
        set
        {
            if ((_complianceOrganization == value))
            {
                return;
            }
            if (((_complianceOrganization == null) 
                        || (_complianceOrganization.Equals(value) != true)))
            {
                _complianceOrganization = value;
                OnPropertyChanged("ComplianceOrganization", value);
            }
        }
    }
    
    [XmlAttribute(DataType="anyURI")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string ruleID
    {
        get
        {
            return _ruleID;
        }
        set
        {
            if ((_ruleID == value))
            {
                return;
            }
            if (((_ruleID == null) 
                        || (_ruleID.Equals(value) != true)))
            {
                _ruleID = value;
                OnPropertyChanged("ruleID", value);
            }
        }
    }
    
    [XmlAttribute(DataType="anyURI")]
    [JsonProperty(NullValueHandling=NullValueHandling.Ignore)]
    public virtual string formID
    {
        get
        {
            return _formID;
        }
        set
        {
            if ((_formID == value))
            {
                return;
            }
            if (((_formID == null) 
                        || (_formID.Equals(value) != true)))
            {
                _formID = value;
                OnPropertyChanged("formID", value);
            }
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool DescriptionSpecified
    {
        get
        {
            return _descriptionSpecified;
        }
        set
        {
            _descriptionSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ComplianceOrganizationSpecified
    {
        get
        {
            return _complianceOrganizationSpecified;
        }
        set
        {
            _complianceOrganizationSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool ruleIDSpecified
    {
        get
        {
            return _ruleIDSpecified;
        }
        set
        {
            _ruleIDSpecified = value;
        }
    }
    
    [JsonIgnore]
    [XmlIgnore()]
    public bool formIDSpecified
    {
        get
        {
            return _formIDSpecified;
        }
        set
        {
            _formIDSpecified = value;
        }
    }
    
    /// <summary>
    /// Test whether ComplianceOrganization should be serialized
    /// </summary>
    public virtual bool ShouldSerializeComplianceOrganization()
    {
        return ComplianceOrganization != null && ComplianceOrganization.Count > 0;
    }
    
    /// <summary>
    /// Test whether Description should be serialized
    /// </summary>
    public virtual bool ShouldSerializeDescription()
    {
        return (Description != null);
    }
    
    /// <summary>
    /// Test whether ruleID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeruleID()
    {
        return !string.IsNullOrEmpty(ruleID);
    }
    
    /// <summary>
    /// Test whether formID should be serialized
    /// </summary>
    public virtual bool ShouldSerializeformID()
    {
        return !string.IsNullOrEmpty(formID);
    }
}
}
#pragma warning restore
