// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(AnonymousType=true, Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("TemplateAdminTypeDigitalSignatureSignatureProperties")]
public partial class TemplateAdminTypeDigitalSignatureSignatureProperties : ExtensionBaseType
{
    #region Private fields
    private ContactType _signer;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate _signerPublicKeyCertificate;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason _signatureReason;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp _signatureDateTimeStamp;
    private TemplateAdminTypeDigitalSignatureSignaturePropertiesImage _image;
    #endregion
    
    [XmlElement(Order=0)]
    [JsonProperty(Order=0, NullValueHandling=NullValueHandling.Ignore)]
    public virtual ContactType Signer
    {
        get
        {
            return _signer;
        }
        set
        {
            if ((_signer == value))
            {
                return;
            }
            if (((_signer == null) 
                        || (_signer.Equals(value) != true)))
            {
                _signer = value;
                OnPropertyChanged("Signer", value);
            }
        }
    }
    
    [XmlElement(Order=1)]
    [JsonProperty(Order=1, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignerPublicKeyCertificate SignerPublicKeyCertificate
    {
        get
        {
            return _signerPublicKeyCertificate;
        }
        set
        {
            if ((_signerPublicKeyCertificate == value))
            {
                return;
            }
            if (((_signerPublicKeyCertificate == null) 
                        || (_signerPublicKeyCertificate.Equals(value) != true)))
            {
                _signerPublicKeyCertificate = value;
                OnPropertyChanged("SignerPublicKeyCertificate", value);
            }
        }
    }
    
    [XmlElement(Order=2)]
    [JsonProperty(Order=2, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureReason SignatureReason
    {
        get
        {
            return _signatureReason;
        }
        set
        {
            if ((_signatureReason == value))
            {
                return;
            }
            if (((_signatureReason == null) 
                        || (_signatureReason.Equals(value) != true)))
            {
                _signatureReason = value;
                OnPropertyChanged("SignatureReason", value);
            }
        }
    }
    
    [XmlElement(Order=3)]
    [JsonProperty(Order=3, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesSignatureDateTimeStamp SignatureDateTimeStamp
    {
        get
        {
            return _signatureDateTimeStamp;
        }
        set
        {
            if ((_signatureDateTimeStamp == value))
            {
                return;
            }
            if (((_signatureDateTimeStamp == null) 
                        || (_signatureDateTimeStamp.Equals(value) != true)))
            {
                _signatureDateTimeStamp = value;
                OnPropertyChanged("SignatureDateTimeStamp", value);
            }
        }
    }
    
    [XmlElement(Order=4)]
    [JsonProperty(Order=4, NullValueHandling=NullValueHandling.Ignore)]
    public virtual TemplateAdminTypeDigitalSignatureSignaturePropertiesImage Image
    {
        get
        {
            return _image;
        }
        set
        {
            if ((_image == value))
            {
                return;
            }
            if (((_image == null) 
                        || (_image.Equals(value) != true)))
            {
                _image = value;
                OnPropertyChanged("Image", value);
            }
        }
    }
    
    /// <summary>
    /// Test whether Signer should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSigner()
    {
        return (_signer != null);
    }
    
    /// <summary>
    /// Test whether SignerPublicKeyCertificate should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignerPublicKeyCertificate()
    {
        return (_signerPublicKeyCertificate != null);
    }
    
    /// <summary>
    /// Test whether SignatureReason should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureReason()
    {
        return (_signatureReason != null);
    }
    
    /// <summary>
    /// Test whether SignatureDateTimeStamp should be serialized
    /// </summary>
    public virtual bool ShouldSerializeSignatureDateTimeStamp()
    {
        return (_signatureDateTimeStamp != null);
    }
    
    /// <summary>
    /// Test whether Image should be serialized
    /// </summary>
    public virtual bool ShouldSerializeImage()
    {
        return (_image != null);
    }
}
}
#pragma warning restore
