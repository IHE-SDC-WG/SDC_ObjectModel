// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.64.0. www.xsd2code.com
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace SDC.Schema
{
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.Reflection;
using System.Globalization;
using System.Xml;
using Newtonsoft.Json.Bson;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using MsgPack.Serialization;
using System.IO;
using System.Text;
using System.ComponentModel.DataAnnotations;
using System.Collections.Generic;

/// <summary>
/// This type provides a structure to record information about a registry.
/// </summary>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
[Serializable]
[DesignerCategoryAttribute("code")]
[XmlTypeAttribute(Namespace="urn:ihe:qrph:sdc:2016")]
[JsonObject("RegistrySummaryType")]
public partial class RegistrySummaryType : ExtensionBaseType
{
    #region Private fields
    private BaseType[] _items;
    private ItemsChoiceType1[] _itemsElementName;
    #endregion
    
    [XmlElement("Contact", typeof(ContactType), Order=0)]
    [XmlElement("Manual", typeof(FileType), Order=0)]
    [XmlElement("ReferenceStandardIdentifier", typeof(string_Stype), Order=0)]
    [XmlElement("RegistryInterface", typeof(InterfaceType), Order=0)]
    [XmlElement("RegistryName", typeof(string_Stype), Order=0)]
    [XmlElement("RegistryPurpose", typeof(FileType), Order=0)]
    [XmlElement("ServiceLevelAgreement", typeof(FileType), Order=0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public virtual BaseType[] Items
    {
        get
        {
            return _items;
        }
        set
        {
            if ((_items == value))
            {
                return;
            }
            if (((_items == null) 
                        || (_items.Equals(value) != true)))
            {
                _items = value;
                OnPropertyChanged("Items", value);
            }
        }
    }
    
    [XmlElement("ItemsElementName", Order=1)]
    [XmlIgnore]
    public virtual ItemsChoiceType1[] ItemsElementName
    {
        get
        {
            return _itemsElementName;
        }
        set
        {
            if ((_itemsElementName == value))
            {
                return;
            }
            if (((_itemsElementName == null) 
                        || (_itemsElementName.Equals(value) != true)))
            {
                _itemsElementName = value;
                OnPropertyChanged("ItemsElementName", value);
            }
        }
    }
}
}
#pragma warning restore
